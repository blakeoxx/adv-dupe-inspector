!function(e){var t={};function i(s){if(t[s])return t[s].exports;var n=t[s]={i:s,l:!1,exports:{}};return e[s].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=t,i.d=function(e,t,s){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(s,n,function(t){return e[t]}.bind(null,n));return s},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),i(1),i(2)},function(e,t,i){},function(e,t){var i={accepted:"Ready to inspect",rejected:"Parsing error",warning:"Optimizations possible"},s=e=>$("<div/>").text(e).html(),n=Object.freeze({unset:0,dictionary:1,dictionaryEscaped:2,table:3,player:4,angle:5,vector:6,boolean:7,string:8,number:9,validators:[/^.*$/,/^.+$/,/^.+$/,/^.+$/,/^\d+$/,/^(-?\d+(?:\.\d+)?),(-?\d+(?:\.\d+)?),(-?\d+(?:\.\d+)?)$/,/^(-?\d+(?:\.\d+)?(?:e-\d+)?),(-?\d+(?:\.\d+)?(?:e-\d+)?),(-?\d+(?:\.\d+)?(?:e-\d+)?)$/,/^t|f$/,/^"[^"]*"$/,/^-?\d+(\.\d+)?$/],cssPrefix:"expr-type-",charToEnum:function(e){switch(e.toUpperCase()){case"Y":return this.dictionary;case"Z":return this.dictionaryEscaped;case"T":return this.table;case"P":return this.player;case"A":return this.angle;case"V":return this.vector;case"B":return this.boolean;case"S":return this.string;case"N":return this.number;default:return this.unset}},enumToChar:function(e){switch(e){case this.dictionary:return"Y";case this.dictionaryEscaped:return"Z";case this.table:return"T";case this.player:return"P";case this.angle:return"A";case this.vector:return"V";case this.boolean:return"B";case this.string:return"S";case this.number:return"N";default:return""}},enumToCSSClass:function(e){switch(e){case this.dictionary:return this.cssPrefix+"dict";case this.dictionaryEscaped:return this.cssPrefix+"dictesc";case this.table:return this.cssPrefix+"table";case this.player:return this.cssPrefix+"player";case this.angle:return this.cssPrefix+"angle";case this.vector:return this.cssPrefix+"vector";case this.boolean:return this.cssPrefix+"boolean";case this.string:return this.cssPrefix+"string";case this.number:return this.cssPrefix+"number";default:return this.cssPrefix+"unset"}}});class a{constructor(e,t,i,s){this.typeLeft=e,this.valueLeft=t,this.typeRight=i,this.valueRight=s}getLeftType(){return this.typeLeft}getLeftValue(){return this.valueLeft}getRightType(){return this.typeRight}getRightValue(){return this.valueRight}isValid(){return n.validators[this.typeLeft].test(this.valueLeft)&&n.validators[this.typeRight].test(this.valueRight)}}class r{constructor(e,t){this.edictID=e,this.isEntityFlag=!!t,this.expressions=[]}getID(){return this.edictID}isEntity(){return this.isEntityFlag}getExpressions(){return this.expressions}setID(e){this.edictID=e}setIsEntity(e){this.isEntityFlag=!!e}addExpression(e){e instanceof a&&this.expressions.push(e)}addExpressionFromArray(e){this.addExpression(new a(e[0],e[1],e[2],e[3]))}}class o{constructor(){this.entities={},this.headEntityID=void 0,this.constraints={},this.headConstraintID=void 0}getHeadEntity(){return void 0!==this.headEntityID&&void 0!==this.entities[this.headEntityID]?this.entities[this.headEntityID]:void 0}getHeadConstraint(){return void 0!==this.headConstraintID&&void 0!==this.constraints[this.headConstraintID]?this.constraints[this.headConstraintID]:void 0}getEntities(){return Object.values(this.entities)}getConstraints(){return Object.values(this.constraints)}getEdict(e){return void 0!==this.entities[e]?this.entities[e]:void 0!==this.constraints[e]?this.constraints[e]:void 0}validateEdicts(e){var t=[],i={},s={};return Object.keys(e).forEach(e=>i[e]=0),Object.keys(this.entities).concat(Object.keys(this.constraints)).forEach(e=>s[e]=0),this.getEntities().concat(this.getConstraints()).forEach(a=>{var r=a.getID();a.getExpressions().forEach((a,o)=>{a.isValid()?(a.getLeftType()==n.table?void 0===this.getEdict(a.getLeftValue())?t.push("Edict "+r+" expression "+o+" left value references a non-existent edict"):s[a.getLeftValue()]++:(a.getLeftType()==n.dictionary||a.getLeftType()==n.dictionaryEscaped)&&(void 0===e[a.getLeftValue()]?t.push("Edict "+r+" expression "+o+" left value references a non-existent dictionary entry"):i[a.getLeftValue()]++),a.getRightType()==n.table?void 0===this.getEdict(a.getRightValue())?t.push("Edict "+r+" expression "+o+" right value references a non-existent edict"):s[a.getRightValue()]++:(a.getRightType()==n.dictionary||a.getRightType()==n.dictionaryEscaped)&&(void 0===e[a.getRightValue()]?t.push("Edict "+r+" expression "+o+" right value references a non-existent dictionary entry"):i[a.getRightValue()]++)):t.push("Edict "+r+" expression "+o+" value doesn't match type")})}),Object.entries(i).forEach(([e,i])=>{i<1&&t.push("Dictionary entry "+e+" is never referenced")}),Object.entries(s).forEach(([e,i])=>{i<1&&t.push("Edict "+e+" is never referenced")}),t}addEntitiesFromStringArray(e){var t=this.stringArrayToEdicts(e,!0);return this.entities=t.edicts,this.headEntityID=t.head,void 0===t.head&&t.warnings.push("Head entity not found"),t.warnings}addConstraintsFromStringArray(e){var t=this.stringArrayToEdicts(e,!1);return this.constraints=t.edicts,this.headConstraintID=t.head,void 0===t.head&&t.warnings.push("Head constraint not found"),t.warnings}stringArrayToEdicts(e,t){var i={head:void 0,edicts:{},warnings:[]};return e.forEach((e,s)=>{var a=e.split(/^(.+)(?:\{)(.+)(?:\})$/g);if(a.length<2)i.warnings.push("Edict string at index "+s+" malformed");else{var o=a[1],d=a[2]?a[2]:"";d.length<1&&i.warnings.push("Edict "+o+" body missing or empty"),a[0].length>0&&i.warnings.push("Data found before edict "+o+" identifier"),a[3].length>0&&i.warnings.push("Data found after edict "+o+" body");var c=new r(o,t),l=d.split(/(?:(.):(.+?))(?:=(.):(.+?))?(?:;)/g),u=[n.unset,"",n.unset,""];if(";"==d)i.warnings.push("Edict "+o+" has no expressions. Is the edict necessary?"),c.addExpressionFromArray(u);else if(1==l.length)i.warnings.push("Edict "+o+" body missing at least 1 separator"),c.addExpressionFromArray(u);else{l[0].length>0&&i.warnings.push("Data found before edict "+o+" first expression");for(var p=1,h=1;h<l.length;p++,h+=5){var f=[void 0===l[h]?n.unset:n.charToEnum(l[h]),void 0===l[h+1]?"":l[h+1],void 0===l[h+2]?n.unset:n.charToEnum(l[h+2]),void 0===l[h+3]?"":l[h+3]];l[h+4].length>0&&i.warnings.push("Data found after edict "+o+" expression "+p),f[0]==n.unset&&i.warnings.push("Edict "+o+" expression "+p+" left type unsupported"),f[0]==n.dictionaryEscaped&&i.warnings.push("Edict "+o+" expression "+p+" left type deprecated"),f[2]==n.unset&&i.warnings.push("Edict "+o+" expression "+p+" right type unsupported"),f[2]==n.dictionaryEscaped&&i.warnings.push("Edict "+o+" expression "+p+" right type deprecated"),c.addExpressionFromArray(f)}}void 0!==i.edicts[o]&&i.warnings.push("Edict "+o+" was defined multiple times"),i.edicts[o]=c,o.startsWith("H")&&(void 0!==i.head&&i.warnings.push("Edict "+o+" looks like the head, but the head was already found"),i.head=o)}}),i}}function d(e){if(0!=e.length){var t=e[0];if("text/plain"==t.type){var i=new FileReader;i.onload=e=>{!function(e,t){t=t.replace(/\r+\n/g,"\n").replace(/\n\s*\n/g,"\n");var i=[],n={},a=["Info","More Information","Save","Dict"],r=t.split(/\n?^\[(.*)\]$\n?/gm);r[0].length>0&&i.push("Data found before first section");for(var d=1;d<r.length;d+=2)void 0!==n[r[d]]?i.push("Section '"+r[d]+"' was defined multiple times"):a.indexOf(r[d])<0&&i.push("Unrecognized section '"+r[d]+"'"),n[r[d]]=r[d+1].split("\n");for(d=0;d<a.length;d++)if(void 0===n[a[d]])return void p("rejected","Section '"+a[d]+"' missing");if(a.forEach(e=>{var t,s,a=(t=n[e],s={result:{},warnings:[]},t.forEach(e=>{var t=e.indexOf(":");t<0||t==e.length-1?(s.warnings.push("Key '"+e+"' has no value"),t=t<0?e.length:t):0==t&&s.warnings.push("Value '"+e+"' has no key");var i=e.slice(0,t),n=e.slice(t+1);void 0!==s.result[i]&&s.warnings.push("Key '"+i+"' was defined multiple times"),s.result[i]=n.replace(/(^\")|(\"$)/g,"")}),s);n[e]=a.result,a.warnings.forEach(t=>i.push("Section '"+e+"' "+t))}),console.log("parsed data sections: ",n),void 0===n.Save.Entities)return void p("rejected","Section 'Save' missing entities");if(void 0===n.Save.Constraints)return void p("rejected","Section 'Save' missing constraints");var h=c(n.Save.Entities);n.Save.Entities=h.result,h.warnings.forEach(e=>i.push("Entities "+e)),h=c(n.Save.Constraints),n.Save.Constraints=h.result,h.warnings.forEach(e=>i.push("Constraints "+e));var f=new o,g=f.addEntitiesFromStringArray(n.Save.Entities),v=f.addConstraintsFromStringArray(n.Save.Constraints);i=i.concat(g,v),console.log("edict collection: ",f),f.validateEdicts(n.Dict),function(e,t){var i=$("#treeview > details");i.empty(),i.prop("open",!0);var s=$("<summary class='fileitem inspectable'></summary>").text(e);i.append(s);var n=$("<details class='topnode listview'><summary>Entity List</summary></details>");t.getEntities().forEach(e=>{var t=$("<div class='inspectable'></div>").text(e.getID()).attr("data-edictid",e.getID());n.append(t)});var a=$("<details class='topnode listview'><summary>Constraint List</summary></details>");t.getConstraints().forEach(e=>{var t=$("<div class='inspectable'></div>").text(e.getID()).attr("data-edictid",e.getID());a.append(t)});var r=$("<details class='topnode assocview'><summary>Associative View</summary></details>");r.append(l(t,t.getHeadEntity())),r.append(l(t,t.getHeadConstraint())),i.append(n),i.append(a),i.append(r),i.find(".inspectable").click((function(e){e.stopPropagation(),e.preventDefault(),u($(this),!0)}))}(e,f),function(e,t,i){$("#inspector").data("filename",e).data("datasections",t).data("edictcollection",i)}(e,n,f),$("#treeview > details summary.fileitem").click(),i.length>0?p("warning",i.map(e=>s(e)).join("<br>")):p("accepted","")}(t.name,e.target.result)},i.onerror=e=>{p("rejected","The file reader returned error code "+e.target.error.code+". Please check the file and try again.")},p("loading",""),i.readAsText(t)}else p("rejected",t.name+" is not a plaintext file (*.txt)")}}function c(e){var t={result:[],warnings:[]};t.result=e.match(/.+?{.*?}/g),null==t.result&&(t.result=[e],t.warnings.push("Edict string contained no edicts"));var i=0;return t.result.forEach(e=>i+=e.length),i<e.length&&t.warnings.push("Edict string contained some junk data, which we removed"),t}function l(e,t){if(void 0===t)return $("<div>(undefined edict)</div>");var i=t.getID();t==e.getHeadEntity()?i+=" (head entity)":t==e.getHeadConstraint()&&(i+=" (head constraint)");var s,a=[];return t.getExpressions().forEach(t=>{t.getLeftType()==n.table&&a.push(l(e,e.getEdict(t.getLeftValue()))),t.getRightType()==n.table&&a.push(l(e,e.getEdict(t.getRightValue())))}),0==a.length?s=$("<div class='inspectable associative'></div>").text(i).attr("data-edictid",t.getID()):((s=$("<details></details>")).append($("<summary class='inspectable associative'></summary>").text(i).attr("data-edictid",t.getID())),a.forEach(e=>s.append(e))),s}function u(e,t){var i,a,r,o=t&&e.is("summary.inspecting")&&e.closest("details").prop("open");$("#treeview > details .inspecting").removeClass("inspecting"),e.addClass("inspecting"),e.hasClass("fileitem")?((r=$("#inspector")).empty(),r.append($("<h2></h2>").text(r.data("filename"))),i=$("<div><b>Info:</b><ul></ul></div>"),a=i.find("ul"),Object.entries(r.data("datasections").Info).forEach(([e,t])=>{a.append($("<li></li>").text(e+": "+t))}),r.append(i),i=$("<div><b>More Information:</b><ul></ul></div>"),a=i.find("ul"),Object.entries(r.data("datasections")["More Information"]).forEach(([e,t])=>{a.append($("<li></li>").text(e+": "+t))}),r.append(i),i=$("<div><b>Dictionary:</b><ul></ul></div>"),a=i.find("ul"),Object.entries(r.data("datasections").Dict).forEach(([e,t])=>{a.append($("<li></li>").text(e+": "+t))}),r.append(i)):function(e,t){var i=$("#inspector"),a=i.data("datasections").Dict,r=i.data("edictcollection"),o=r.getEdict(e);i.empty();var d=$("<h2></h2>").text("Edict "+e);if(i.append(d),void 0!==o){d.text(d.text()+" ("+(o.isEntity()?"Entity":"Constraint")+")");var c,l,u,p=(e,i)=>{var o={classes:[],formattedValue:""};if(n.validators[e].test(i))if(e==n.dictionary||e==n.dictionaryEscaped)void 0===a[i]?(o.classes.push("expr-value-notfound"),o.formattedValue=s(i)):o.formattedValue=s(a[i]);else if(e==n.table)if(void 0===r.getEdict(i))o.classes.push("expr-value-notfound"),o.formattedValue=s(i);else{var d=i.replace(/'|\\/g,"\\$&");o.formattedValue="<a href='#' onclick='updateInspectionEdict(\""+d+'", '+t+")'>"+s(i)+"</a>"}else if(e==n.angle||e==n.vector){var c=i.match(n.validators[e]);o.formattedValue="("+c[1]+", "+c[2]+", "+c[3]+")"}else e==n.boolean?o.formattedValue="t"==i?"TRUE":"FALSE":o.formattedValue=s(i);else o.classes.push("expr-value-invalid"),o.formattedValue=s(i);return o};c=$("<div><b>Expressions:</b><table class='expr-list'></table></div>"),l=c.find("table"),u=$("<tr><td><i class='bullet'></i><span class='lval'></span></td><td>=</td><td><span class='rval'></span></td></tr>"),o.getExpressions().forEach(e=>{var t=u.clone(),i=p(e.getLeftType(),e.getLeftValue()),s=p(e.getRightType(),e.getRightValue());t.find(".lval").addClass(n.enumToCSSClass(e.getLeftType())).addClass(i.classes.join(" ")).html(i.formattedValue),t.find(".rval").addClass(n.enumToCSSClass(e.getRightType())).addClass(s.classes.join(" ")).html(s.formattedValue),l.append(t)}),i.append(c)}else d.text(d.text()+" (Undefined Edict)")}(e.data("edictid"),e.hasClass("associative")),e.parentsUntil("#treeview","details").prop("open",!0),o&&e.closest("details").prop("open",!1);var d=$("#treeview").scrollTop(),c=d+$("#treeview").height(),l=e.position().top,u=e.position().top+e.height();l<d?$("#treeview").scrollTop(l):u>c&&$("#treeview").scrollTop(u-$("#treeview").height())}function p(e,t){$("#filestatus").removeClass().addClass(e),$("#filestatus .label").text(void 0!==i[e]?i[e]:""),console.log("file status updated to "+e+":",t)}function h(e){d(e.originalEvent.target.files)}function f(e){e.stopPropagation(),e.preventDefault(),d(e.originalEvent.dataTransfer.files)}function g(e){e.stopPropagation(),e.preventDefault(),e.originalEvent.dataTransfer.dropEffect="copy"}$(document).ready(()=>{$("#fileupload input[type='file']").on("change",h)}),$(document).ready(()=>{$("body").on("drop",f)}),$(document).ready(()=>{$("body").on("dragover",g)})}]);